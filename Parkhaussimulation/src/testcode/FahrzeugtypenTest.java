package testcode;

import static org.junit.jupiter.api.Assertions.*;


import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import fahrzeugTypen.Fahrzeugtypen;
import fahrzeugTypen.PickupTyp;
import fahrzeugTypen.PkwTyp;
import fahrzeugTypen.QuadTyp;
import fahrzeugTypen.SuvTyp;
import fahrzeugTypen.TrikeTyp;
import fahrzeugTypen.ZweiradTyp;

// Author: Marcel Blasius
class FahrzeugtypenTest {

	@Test
	@DisplayName("Es laesst sich nur ein PKW-Typ instanzieren")
	void PkwTypTest() {
		PkwTyp p = PkwTyp.getInstance();
		PkwTyp x = PkwTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}

	@Test
	@DisplayName("Es laesst sich nur ein Pickup-Typ instanzieren")
	void PickupTypTest() {
		PickupTyp p = PickupTyp.getInstance();
		PickupTyp x = PickupTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}

	@Test
	@DisplayName("Es laesst sich nur ein SUV-Typ instanzieren")
	void SuvTypTest() {
		SuvTyp p = SuvTyp.getInstance();
		SuvTyp x = SuvTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}

	@Test
	@DisplayName("Es laesst sich nur ein Zweirad-Typ instanzieren")
	void ZweiradTypTest() {
		ZweiradTyp p = ZweiradTyp.getInstance();
		ZweiradTyp x = ZweiradTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}

	@Test
	@DisplayName("Es laesst sich nur ein Trike-Typ instanzieren")
	void TrikeTypTest() {
		TrikeTyp p = TrikeTyp.getInstance();
		TrikeTyp x = TrikeTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}

	@Test
	@DisplayName("Es laesst sich nur ein Quad-Typ instanzieren")
	void QuadTypTest() {
		QuadTyp p = QuadTyp.getInstance();
		QuadTyp x = QuadTyp.getInstance();
		assert(x != null);
		assert(p != null);
		assertSame(p, x);
	}
	
	@Test
	@DisplayName("Getter- und Setter-Methoden funktionieren wie erwartet")
	void getSetTest() {
		Fahrzeugtypen x = QuadTyp.getInstance();
		double gebuehr_expected = 12.5;
		x.setGebuehr(12.5);
		assertEquals(gebuehr_expected, x.getGebuehr());
		
		double quadratmeter_expected = 2.5;
		x.setQuadratmeter(2.5);
		assertEquals(quadratmeter_expected, x.getQuadratmeter());
	}

}
